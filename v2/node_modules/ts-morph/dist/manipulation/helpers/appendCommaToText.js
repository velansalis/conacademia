"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = require("../../typescript");
const scanner = typescript_1.ts.createScanner(typescript_1.ts.ScriptTarget.Latest, true);
/**
 * Appends a comma to the text taking into account the various language aspects.
 */
function appendCommaToText(text) {
    const pos = getAppendCommaPos(text);
    if (pos === -1)
        return text;
    return text.substring(0, pos) + "," + text.substring(pos);
}
exports.appendCommaToText = appendCommaToText;
/**
 * Gets the position in the text that a comma could be appended.
 * @param text - Text to search.
 * @returns The position to append. -1 otherwise.
 */
function getAppendCommaPos(text) {
    scanner.setText(text);
    try {
        if (scanner.scan() === typescript_1.ts.SyntaxKind.EndOfFileToken)
            return -1;
        while (scanner.scan() !== typescript_1.ts.SyntaxKind.EndOfFileToken) {
            // just keep scanning...
        }
        const pos = scanner.getStartPos();
        return text[pos - 1] === "," ? -1 : pos;
    }
    finally {
        // ensure the scanner doesn't hold onto the text so the string
        // gets garbage collected
        scanner.setText(undefined);
    }
}
exports.getAppendCommaPos = getAppendCommaPos;
